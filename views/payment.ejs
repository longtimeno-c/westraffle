<!-- Remove the Stripe script since it's now loaded in layout.ejs -->
<div class="max-w-4xl mx-auto">
    <div class="card-gradient rounded-xl shadow-xl overflow-hidden">
        <div class="p-8">
            <h1 class="text-4xl font-bold text-gray-800 mb-8">
                <%= isBid ? 'Place Your Bid' : 'Purchase Tickets' %>
            </h1>
            
            <div class="mb-8">
                <div class="flex justify-between items-center mb-4">
                    <span class="text-gray-600"><%= isBid ? 'Bid Amount:' : 'Amount to Pay:' %></span>
                    <span class="text-2xl font-bold text-raffle-primary">$<%= amount.toFixed(2) %></span>
                </div>
                <% if (typeof quantity !== 'undefined') { %>
                    <div class="flex justify-between items-center">
                        <span class="text-gray-600">Number of Tickets:</span>
                        <span class="font-semibold text-gray-800"><%= quantity %></span>
                    </div>
                <% } %>
                <% if (isBid) { %>
                    <div class="mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                        <p class="text-yellow-800 text-sm">
                            <span class="font-semibold">Note:</span> Your payment will be held until your bid is either:
                            <ul class="list-disc ml-6 mt-2">
                                <li>Outbid by another participant</li>
                                <li>Won at the end of the auction</li>
                            </ul>
                        </p>
                    </div>
                <% } %>
            </div>

            <% if (ENABLE_PAYMENTS === 'true') { %>
                <div class="bg-white rounded-lg p-6 shadow-sm mb-8">
                    <h2 class="text-lg font-semibold text-gray-800 mb-4">Payment Details</h2>
                    <form id="payment-form" class="space-y-6">
                        <div id="payment-element" class="min-h-[200px]"></div>
                        <div id="error-message" class="text-red-500 hidden"></div>
                        <button id="submit-button" class="btn-primary w-full py-4 text-lg relative">
                            <span id="button-text">
                                <%= isBid ? 'Place Bid' : 'Pay Now' %>
                            </span>
                            <div id="spinner" class="hidden">
                                <div class="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2"></div>
                            </div>
                        </button>
                    </form>
                </div>

                <div class="text-center text-sm text-gray-500">
                    <p>Secure payment powered by Stripe</p>
                    <div class="flex justify-center space-x-4 mt-2">
                        <img src="https://stripe.com/img/v3/home/social.png" alt="Stripe" class="h-6">
                    </div>
                </div>

                <script>
                    // Debug logging for environment variables
                    console.log('Payment Environment:', {
                        enablePayments: '<%= ENABLE_PAYMENTS %>',
                        hasPublicKey: !!'<%= STRIPE_PUBLIC_KEY %>',
                        publicKeyLength: '<%= STRIPE_PUBLIC_KEY %>' ? '<%= STRIPE_PUBLIC_KEY %>'.length : 0,
                        clientSecret: '<%= clientSecret %>' ? 'Present' : 'Missing',
                        clientSecretLength: '<%= clientSecret %>' ? '<%= clientSecret %>'.length : 0
                    });

                    // Wait for both DOM and Stripe to be ready
                    function initializePayment() {
                        console.log('Initializing payment form...', {
                            hasStripe: !!window.stripe,
                            stripeVersion: window.stripe ? window.stripe.VERSION : 'not available',
                            hasClientSecret: !!'<%= clientSecret %>',
                            clientSecretLength: '<%= clientSecret %>' ? '<%= clientSecret %>'.length : 0,
                            amount: '<%= amount %>',
                            isBid: '<%= isBid %>',
                            raffleId: '<%= raffle.id %>',
                            enablePayments: '<%= ENABLE_PAYMENTS %>',
                            hasPublicKey: !!'<%= STRIPE_PUBLIC_KEY %>',
                            paymentElementContainer: document.getElementById('payment-element') ? 'Found' : 'Not Found'
                        });

                        // Check if Stripe is loaded
                        if (!window.stripe) {
                            console.error('Stripe not initialized. Please ensure you are using HTTPS and Stripe.js is loaded.');
                            const errorMessage = document.getElementById('error-message');
                            if (errorMessage) {
                                errorMessage.textContent = 'Payment system is not properly initialized. Please try again later.';
                                errorMessage.classList.remove('hidden');
                            }
                            return;
                        }

                        // Check for client secret
                        const clientSecret = '<%= clientSecret %>';
                        if (!clientSecret) {
                            console.error('No client secret provided');
                            const errorMessage = document.getElementById('error-message');
                            if (errorMessage) {
                                errorMessage.textContent = 'Payment configuration is missing. Please try again later.';
                                errorMessage.classList.remove('hidden');
                            }
                            return;
                        }

                        // Configure Stripe Elements appearance
                        const appearance = {
                            theme: 'stripe',
                            variables: {
                                colorPrimary: '#4f46e5',
                                colorBackground: '#ffffff',
                                colorText: '#1f2937',
                                colorDanger: '#ef4444',
                                fontFamily: 'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
                                spacingUnit: '4px',
                                borderRadius: '8px',
                            },
                        };

                        try {
                            console.log('Creating Stripe Elements instance...');
                            const elements = window.stripe.elements({ 
                                appearance,
                                clientSecret: clientSecret,
                                paymentMethodOrder: ['apple_pay', 'google_pay', 'card'],
                                defaultValues: {
                                    billingDetails: {
                                        name: '<%= typeof name !== "undefined" ? name : "" %>',
                                        email: '<%= typeof email !== "undefined" ? email : "" %>'
                                    }
                                }
                            });
                            console.log('Stripe Elements instance created successfully');

                            console.log('Creating payment element...');
                            const paymentElement = elements.create('payment', {
                                layout: {
                                    type: 'accordion',
                                    defaultCollapsed: false,
                                    radios: true,
                                    spacedAccordionItems: true
                                },
                                wallets: {
                                    applePay: 'auto',
                                    googlePay: 'auto'
                                }
                            });
                            console.log('Payment element created successfully');

                            const paymentElementContainer = document.getElementById('payment-element');
                            if (paymentElementContainer) {
                                console.log('Found payment element container, mounting...');
                                paymentElement.mount('#payment-element');
                                console.log('Payment element mounted successfully');
                            } else {
                                console.error('Payment element container not found in DOM');
                                const errorMessage = document.getElementById('error-message');
                                if (errorMessage) {
                                    errorMessage.textContent = 'Payment form could not be loaded. Please try again later.';
                                    errorMessage.classList.remove('hidden');
                                }
                            }

                            // Get form elements
                            const form = document.getElementById('payment-form');
                            const submitButton = document.getElementById('submit-button');
                            const spinner = document.getElementById('spinner');
                            const buttonText = document.getElementById('button-text');
                            const errorMessage = document.getElementById('error-message');

                            // Handle form submission
                            form.addEventListener('submit', async (event) => {
                                event.preventDefault();
                                console.log('Form submission started');

                                submitButton.disabled = true;
                                spinner.classList.remove('hidden');
                                buttonText.classList.add('opacity-0');
                                errorMessage.classList.add('hidden');

                                try {
                                    console.log('Confirming payment with Stripe...');
                                    const { error } = await window.stripe.confirmPayment({
                                        elements,
                                        confirmParams: {
                                            return_url: window.location.origin + '/raffles/<%= raffle.id %>?success=true',
                                        },
                                    });

                                    if (error) {
                                        console.error('Payment error:', {
                                            message: error.message,
                                            type: error.type,
                                            code: error.code
                                        });
                                        errorMessage.textContent = error.message;
                                        errorMessage.classList.remove('hidden');
                                        submitButton.disabled = false;
                                        spinner.classList.add('hidden');
                                        buttonText.classList.remove('opacity-0');
                                    } else {
                                        console.log('Payment confirmation successful');
                                    }
                                } catch (error) {
                                    console.error('Payment failed:', {
                                        message: error.message,
                                        type: error.type,
                                        stack: error.stack
                                    });
                                    errorMessage.textContent = 'An unexpected error occurred. Please try again.';
                                    errorMessage.classList.remove('hidden');
                                    submitButton.disabled = false;
                                    spinner.classList.add('hidden');
                                    buttonText.classList.remove('opacity-0');
                                }
                            });

                            // Handle payment element changes
                            paymentElement.on('change', (event) => {
                                console.log('Payment element changed:', {
                                    complete: event.complete,
                                    error: event.error ? {
                                        message: event.error.message,
                                        type: event.error.type
                                    } : null
                                });

                                if (event.error) {
                                    errorMessage.textContent = event.error.message;
                                    errorMessage.classList.remove('hidden');
                                } else {
                                    errorMessage.classList.add('hidden');
                                }
                            });
                        } catch (error) {
                            console.error('Error during payment element initialization:', {
                                message: error.message,
                                stack: error.stack,
                                type: error.name
                            });
                            const errorMessage = document.getElementById('error-message');
                            if (errorMessage) {
                                errorMessage.textContent = 'Failed to initialize payment form. Please try again later.';
                                errorMessage.classList.remove('hidden');
                            }
                        }
                    }

                    // Initialize when both DOM and Stripe are ready
                    if (document.readyState === 'loading') {
                        document.addEventListener('DOMContentLoaded', initializePayment);
                    } else {
                        initializePayment();
                    }

                    // Add a fallback initialization
                    window.addEventListener('load', () => {
                        const paymentElement = document.getElementById('payment-element');
                        if (!paymentElement || !paymentElement.children.length) {
                            console.log('Payment element not mounted, retrying initialization...');
                            initializePayment();
                        }
                    });
                </script>
            <% } else { %>
                <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
                    <p class="text-yellow-800">Payments are currently disabled. Please try again later.</p>
                </div>
            <% } %>
        </div>
    </div>
</div> 